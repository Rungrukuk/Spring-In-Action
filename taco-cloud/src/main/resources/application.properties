# spring.thymeleaf.cache=false
# spring.datasource.generate-unique-name=false
# spring.datasource.name=tacocloud
# spring.datasource.url=jdbc:h2:mem:tacocloud
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.datasource.initialization-mode=always
spring.thymeleaf.cache=false
spring.datasource.generate-unique-name=false
spring.datasource.name=tacocloud
#+++++++++++++++++++++++++++++++++OUATH2-API++++++++++++++++++++++++++++++++++
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9000/oauth2/jwks
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.security.oauth2.client=DEBUG
# logging.level.org.springframework.security.oauth2.core=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework=DEBUG
server.error.whitelabel.enabled=false
# spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000
#---------------------------------OAUTH2-API----------------------------------

#+++++++++++++++++++++++++++++++++HTTPS++++++++++++++++++++++++++++++++++
# server.port=8443
# server.ssl.key-store=file://~/projects/TacosProject/taco-cloud/mykeys.jks
# server.ssl.key-store-password=letmein
# server.ssl.key-password=letmein
#---------------------------------HTTPS----------------------------------

#+++++++++++++++++++++++++++++++++REST API++++++++++++++++++++++++++++++++++
spring.data.rest.base-path=data-api/
#---------------------------------REST API----------------------------------

#+++++++++++++++++++++++++++++++++Page Size++++++++++++++++++++++++++++++++++
taco.orders.pageSize=10
#---------------------------------Page Size----------------------------------

#+++++++++++++++++++++++++++++++++Logging++++++++++++++++++++++++++++++++++
# logging.file.path=/var/logs/
# logging.file.name=TacoCloud.log
# logging.level.root=WARN
# logging.level.org.springframework.security=DEBUG
#---------------------------------Logging----------------------------------

# spring.data.cassandra.keyspace-name=tacocloud
# spring.data.cassandra.schema-action=recreate
# spring.data.cassandra.local-datacenter=datacenter1

# spring:
#  data:
#  mongodb:
#  host: mongodb.tacocloud.com
#  port: 27017
#  username: tacocloud
#  password: s3cr3tp455w0rd
#  database: tacoclouddb

# spring:
#     security:
#         oauth2:
#             client:
#                 registration:
#                     <oauth2 or openid provider name>:
#                         clientId: <client id>
#                         clientSecret: <client secret>
#                         scope: <comma-separated list of requested scopes>
# spring:
#     security:
#         oauth2:
#             client:
#                 registration:
#                     facebook:
#                         clientId: <facebook client id>
#                         clientSecret: <facebook client secret>
#                         scope: email, public_profile

#+++++++++++++++++++++++++++++++++OAUTH2-CLient+++++++++++++++++++++++++++++++++++++++++++

# spring.security.oauth2.client.registration.taco-admin-client.client-id=taco-admin-client
# spring.security.oauth2.client.registration.taco-admin-client.client-secret=your-client-secret
# spring.security.oauth2.client.registration.taco-admin-client.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.taco-admin-client.redirect-uri=http://localhost:8080/login/oauth2/code/taco-admin-client
# spring.security.oauth2.client.registration.taco-admin-client.scope=openid,writeIngredients,deleteIngredients
# spring.security.oauth2.client.registration.taco-admin-client.provider=taco-provider

# spring.security.oauth2.client.provider.taco-provider.authorization-uri=http://localhost:9000/oauth2/authorize
# spring.security.oauth2.client.provider.taco-provider.token-uri=http://localhost:9000/oauth/token
# spring.security.oauth2.client.provider.taco-provider.user-info-uri=http://localhost:9000/oauth2/userinfo
# spring.security.oauth2.client.provider.taco-provider.jwk-set-uri=http://localhost:9000/oauth2/keys
# spring.security.oauth2.client.provider.taco-provider.issuer-uri=http://localhost:9000

#---------------------------------OAUTH2-Client--------------------------------------------

#+++++++++++++++++++++++++++++++++Message Broker Artemis+++++++++++++++++++++++++++++++++++++++++++
# spring.artemis.host=localhost
# spring.artemis.port=61616
# spring.artemis.user=admin
# spring.artemis.password=password

# spring.jms.template.default-destination=tacocloud.order.queue
# spring.profiles.active=jms-listener
#---------------------------------Message Broker Artemis--------------------------------------------

#+++++++++++++++++++++++++++++++++Rabbit Message Queue+++++++++++++++++++++++++++++++++++++++++++
# spring:
#  profiles: prod
#  rabbitmq:
#  host: rabbit.tacocloud.com
#  port: 5673
#  username: tacoweb
#  password: l3tm31n

# spring.rabbitmq.addresses=tacocloud.order.queue
# spring.rabbitmq.template.exhange=tacocloud.order
# spring.rabbitmq.template.routing-key=kitchens.central
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=tacoweb
spring.rabbitmq.password=l3tm31n
#---------------------------------Rabbit Message Queue--------------------------------------------


#+++++++++++++++++++++++++++++++++Rabbit Message Queue+++++++++++++++++++++++++++++++++++++++++++
# spring:
#  kafka:
#  bootstrap-servers:
#  - kafka.tacocloud.com:9092
#  - kafka.tacocloud.com:9093
#  - kafka.tacocloud.com:9094
#  template:
#   default-topic: tacocloud.orders.topic
spring.kafka.producer.value-serializer=tacos.utils.TacoOrderSerializer
sprin.kafka.bootstrap-servers=localhost:9092
# sprin.kafka.default-topic=tacocloud.orders.topic
#---------------------------------Rabbit Message Queue--------------------------------------------


#+++++++++++++++++++++++++++++++++Prod Variables V2++++++++++++++++++++++++++++++++++
# spring:
#   profiles: prod
#   datasource:
#     url: jdbc:mysql://localhost/tacocloud
#     username: tacouser
#     password: tacopassword
#   logging:
#     level:
#       tacos: WARN
#---------------------------------Prod Variables V2----------------------------------
