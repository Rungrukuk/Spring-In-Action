spring.thymeleaf.cache=false
spring.datasource.generate-unique-name=false
spring.datasource.name=tacocloud
#+++++++++++++++++++++++++++++++++HTTPS++++++++++++++++++++++++++++++++++
# server:
#     port: 8443
#     ssl:
#         key-store: file://~/projects/TacosProject/taco-cloud/mykeys.jks
#         key-store-password: letmein
#         key-password: letmein
#---------------------------------HTTPS----------------------------------

#+++++++++++++++++++++++++++++++++Page Size++++++++++++++++++++++++++++++++++
taco:
 orders:
 pageSize: 10
#---------------------------------Page Size----------------------------------


#+++++++++++++++++++++++++++++++++Logging++++++++++++++++++++++++++++++++++
logging:
 level:
 root: WARN
 org:
 springframework:
 security: DEBUG

 logging:
    file:
        path: /var/logs/
        file: TacoCloud.log
    level:
        root: WARN
        org:
            springframework:
            security: DEBUG
#---------------------------------Logging----------------------------------

# spring.data.cassandra.keyspace-name=tacocloud
# spring.data.cassandra.schema-action=recreate
# spring.data.cassandra.local-datacenter=datacenter1

# spring:
#  data:
#  mongodb:
#  host: mongodb.tacocloud.com
#  port: 27017
#  username: tacocloud
#  password: s3cr3tp455w0rd
#  database: tacoclouddb

# spring:
#     security:
#         oauth2:
#             client:
#                 registration:
#                     <oauth2 or openid provider name>:
#                         clientId: <client id>
#                         clientSecret: <client secret>
#                         scope: <comma-separated list of requested scopes>

# spring:
#     security:
#         oauth2:
#             client:
#                 registration:
#                     facebook:
#                         clientId: <facebook client id>
#                         clientSecret: <facebook client secret>
#                         scope: email, public_profile